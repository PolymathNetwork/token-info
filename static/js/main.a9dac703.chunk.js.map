{"version":3,"sources":["constants.js","ti.js","Token.js","App.js","serviceWorker.js","index.js"],"names":["zero_address","STR_MAINNET","STR_KOVAN","fetchInfo","_x","_x2","_x3","_fetchInfo","apply","this","arguments","_callee","web3","str","ticker","calls","batch","tokenAddress","token","version","_token","promises","result","owner","name","versionArray","tokenDetails","symbol","granularity","totalSupply","transfersFrozen","isIssuable","controllerDisabled","controller","getInvestorCount","currentCheckpointId","decimals","permission","transfer","sto","checkpoint","burn","data","wallet","treasuryWallet","dataStore","documents","modulesMap","modulesDetails","_i","_modules","moduleAdresses","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","moduleAddress","module","paused","moduleDetails","uniqueModules","map","_i2","_modulesDetails","item","props","regenerator_default","a","wrap","_context","prev","next","methods","getSecurityTokenAddress","call","sent","Error","eth","Contract","securityToken3ABI","getVersion","push","BatchRequest","securityToken2ABI","mintingFrozen","getModulesByType","getTreasuryWallet","getAllDocuments","concat","join","Promise","res","rej","req","request","err","length","add","execute","all","doc","utils","hexToUtf8","fromWei","undefined","Symbol","iterator","done","value","moduleABI","getModule","moduleName","label","moduleTypes","t0","return","finish","Map","has","set","address","abrupt","stop","useStyles","makeStyles","theme","root","flexGrow","link","margin","spacing","table","width","modules","marginTop","EtherscanLink","_ref","prefix","react_default","createElement","Link","href","target","rel","Row","_ref2","TableRow","TableCell","style","minWidth","Typography","variant","_bool","val","Module","_ref3","etherscanUrl","factoryAddress","isArchived","Modules","_ref4","classes","className","align","gutterBottom","Table","size","TableHead","TableBody","Token_Module","Object","assign","key","Token","_ref5","display","alignItems","justifyContent","wrapper","position","buttonSuccess","backgroundColor","green","&:hover","fabProgress","color","top","left","zIndex","buttonProgress","marginLeft","App","_useState","useState","_useState2","slicedToArray","loading","setLoading","_useState3","_useState4","setWeb3","_useState5","_useState6","setStr","_useState7","_useState8","setTicker","_useState9","_useState10","error","setError","_useState11","_useState12","tokenInfo","setTokenInfo","_useState13","_useState14","network","setNetwork","_useState15","_useState16","setEtherscanUrl","useEffect","_initWeb","asyncToGenerator","mark","chainId","window","ethereum","Web3","enable","console","currentProvider","net","getId","SecurityTokenRegistryABI","initWeb3","submitHandler","_callee2","e","_tokenInfo","_context2","preventDefault","message","Container","maxWidth","onSubmit","TextField","placeholder","inputProps","maxLength","disabled","onChange","event","RegExp","test","toUpperCase","Button","onClick","CircularProgress","progress","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9dac703.chunk.js","sourcesContent":["export const zero_address = '0x0000000000000000000000000000000000000000';\nexport const STR_MAINNET = '0x240f9f86b1465bf1b8eb29bc88cbf65573dfdd97';\nexport const STR_KOVAN = '0x91110c2f67e2881a8540417be9eadf5bc9f2f248';","import securityToken2ABI from './abis/SecurityToken2.json';\nimport securityToken3ABI from './abis/SecurityToken3.json';\nimport moduleABI from './abis/Module.json';\nimport { zero_address } from './constants';\n\nexport async function fetchInfo(web3, str, ticker) {\n    let calls = [];\n    let batch = [];\n    let tokenAddress = await str.methods.getSecurityTokenAddress(ticker).call();\n\n    if (tokenAddress === zero_address) {\n        throw new Error('Symbol not found') \n    }\n\n    let token = new web3.eth.Contract(securityToken3ABI, tokenAddress);\n    const version = await token.methods.getVersion().call();\n    batch.push(new web3.BatchRequest());\n\n    if (version[0] === '2') {\n        token = new web3.eth.Contract(securityToken2ABI, tokenAddress);\n        calls.push(token.methods.owner().call);\n        calls.push(token.methods.name().call);\n        calls.push(token.methods.getVersion().call);\n        calls.push(token.methods.tokenDetails().call);\n        calls.push(token.methods.symbol().call);\n        calls.push(token.methods.granularity().call);\n        calls.push(token.methods.totalSupply().call);\n        calls.push(token.methods.transfersFrozen().call);\n        calls.push(token.methods.mintingFrozen().call);\n        calls.push(token.methods.controllerDisabled().call);\n        calls.push(token.methods.controller().call);\n        calls.push(token.methods.getInvestorCount().call);\n        calls.push(token.methods.currentCheckpointId().call);\n        calls.push(token.methods.decimals().call);\n        calls.push(token.methods.getModulesByType(1).call);\n        calls.push(token.methods.getModulesByType(2).call);\n        calls.push(token.methods.getModulesByType(3).call);\n        calls.push(token.methods.getModulesByType(4).call);\n        calls.push(token.methods.getModulesByType(5).call);\n    }\n    else if (version[0] === '3') {\n        let token = new web3.eth.Contract(securityToken3ABI, tokenAddress);\n        calls.push(token.methods.owner().call);\n        calls.push(token.methods.name().call);\n        calls.push(token.methods.getVersion().call);\n        calls.push(token.methods.tokenDetails().call);\n        calls.push(token.methods.symbol().call);\n        calls.push(token.methods.granularity().call);\n        calls.push(token.methods.totalSupply().call);\n        calls.push(token.methods.transfersFrozen().call);\n        calls.push(token.methods.isIssuable().call);\n        calls.push(token.methods.controllerDisabled().call);\n        calls.push(token.methods.controller().call);\n        calls.push(token.methods.getInvestorCount().call);\n        calls.push(token.methods.currentCheckpointId().call);\n        calls.push(token.methods.decimals().call);\n        calls.push(token.methods.getModulesByType(1).call);\n        calls.push(token.methods.getModulesByType(2).call);\n        calls.push(token.methods.getModulesByType(3).call);\n        calls.push(token.methods.getModulesByType(4).call);\n        calls.push(token.methods.getModulesByType(5).call);\n        calls.push(token.methods.getModulesByType(6).call);\n        calls.push(token.methods.getModulesByType(7).call);\n        calls.push(token.methods.getTreasuryWallet().call);\n        calls.push(token.methods.dataStore().call);\n        calls.push(token.methods.getAllDocuments().call);\n    }\n    else {\n        throw new Error(`Token version ${version.join('.')} is not supported.`) \n    }\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n            let req = call.request((err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch[batch.length - 1].add(req);\n        })\n    })\n    batch[batch.length - 1].execute();\n    const result = await Promise.all(promises);\n\n    let {\n        0: owner,\n        1: name,\n        2: versionArray,\n        3: tokenDetails,\n        4: symbol,\n        5: granularity,\n        6: totalSupply,\n        7: transfersFrozen,\n        8: isIssuable,\n        9: controllerDisabled,\n        10: controller,\n        11: getInvestorCount,\n        12: currentCheckpointId,\n        13: decimals,\n        14: permission,\n        15: transfer,\n        16: sto,\n        17: checkpoint,\n        18: burn,\n        19: data,\n        20: wallet,\n        21: treasuryWallet,\n        22: dataStore,\n        23: documents\n    } = result;\n\n    /////////////////////////////////////////\n    // Post-processing\n    /////////////////////////////////////////\n\n    documents = documents ? documents.map(doc => web3.utils.hexToUtf8(doc)) : null;\n    totalSupply = web3.utils.fromWei(totalSupply);\n\n    /////////////////////////////////////////\n    // Backward compatibility\n    /////////////////////////////////////////\n\n     if (version[0] === '2') {\n        data = data ? data : [];\n        wallet = wallet ? wallet : [];\n        isIssuable = !isIssuable;\n        treasuryWallet = null;\n        dataStore = null;\n        documents = null;\n    }\n\n    /////////////////////////////////////////\n    // Modules\n    /////////////////////////////////////////\n\n    const modulesMap = [\n        '',\n        'permission',\n        'transfer',\n        'sto',\n        'checkpoint',\n        'burn',\n        'data',\n        'wallet'\n    ];\n\n    const modules = [\n        permission,\n        transfer,\n        sto,\n        checkpoint,\n        burn,\n        data,\n        wallet\n    ];\n\n    const modulesDetails = [];\n    for (const moduleAdresses of modules) {\n        for (const moduleAddress of moduleAdresses) {\n            const module = new web3.eth.Contract(moduleABI, moduleAddress);\n            const paused = await module.methods.paused().call();\n\n            let moduleDetails = await token.methods.getModule(moduleAddress).call();\n            moduleDetails.paused = paused;\n            moduleDetails.moduleName = web3.utils.hexToUtf8(moduleDetails.moduleName);\n            moduleDetails.label = moduleDetails.label ?\n                web3.utils.hexToUtf8(moduleDetails.label) :\n                '';\n            moduleDetails.moduleTypes = modulesMap[moduleDetails.moduleTypes[0]];\n            modulesDetails.push(moduleDetails);\n        }\n    }\n\n    const uniqueModules = [];\n    const map = new Map();\n    // Remove duplicate\n    for (const item of modulesDetails) {\n        if(!map.has(item.moduleAddress)){\n            map.set(item.moduleAddress, true); \n            uniqueModules.push(item);\n        }\n    }\n\n    /////////////////////////////////////////\n    // Prep props\n    /////////////////////////////////////////\n\n    const props = {   \n        address: tokenAddress,\n        owner,\n        name,\n        versionArray,\n        tokenDetails,\n        symbol,\n        granularity,\n        totalSupply,\n        transfersFrozen,\n        isIssuable,\n        controllerDisabled,\n        controller,\n        getInvestorCount,\n        currentCheckpointId,\n        decimals,\n        treasuryWallet,\n        dataStore,\n        documents,\n        modulesDetails: uniqueModules\n    };\n    return props;\n}","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { zero_address } from './constants'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    link: {\n        margin: theme.spacing(1),\n    },\n    table: {\n        width: '100%'\n    },\n    modules: {\n        marginTop: 50\n    }\n}));\n\n\nexport function EtherscanLink({ prefix, address }) {\n    return <Link href={`${prefix}/${address}`} target=\"_blank\" rel=\"noreferrer\">{address}</Link>;\n}\n\nexport function Row({label, value}) {\n    return (\n        <TableRow>\n            <TableCell style={{minWidth: 180}}>\n                <Typography variant=\"button\">{label}</Typography>\n            </TableCell>\n            <TableCell>{value}</TableCell>\n        </TableRow>\n    );\n}\n\nfunction _bool(val) {\n    return val ? 'true' : 'false';\n}\n\nfunction Module({etherscanUrl, moduleAddress, moduleName, factoryAddress, paused, label, isArchived, moduleTypes}) {\n    if (label) {\n        moduleName = `${moduleName (label)}`;\n    }\n\n    return (\n    <TableRow>\n        <TableCell>\n            <Typography variant=\"button\">{moduleTypes}</Typography>\n        </TableCell>\n        <TableCell>{moduleName}</TableCell>\n        <TableCell>{_bool(isArchived)}</TableCell>\n        <TableCell>{_bool(paused)}</TableCell>\n        <TableCell><EtherscanLink address={moduleAddress} prefix={etherscanUrl}/></TableCell>\n    </TableRow>);\n}\n\nfunction Modules({etherscanUrl, modulesDetails}) {\n    const classes = useStyles();\n    return (\n        <div className={classes.modules}>\n            <Typography align=\"left\" variant=\"h6\" gutterBottom>{\"Attached modules\"}</Typography>\n            <Table className={classes.table} size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Type</TableCell>\n                        <TableCell>Name (label?)</TableCell>\n                        <TableCell>Archived</TableCell>\n                        <TableCell>Paused</TableCell>\n                        <TableCell>Address</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {modulesDetails.map(module => <Module key={module.moduleAddress} etherscanUrl={etherscanUrl} {...module} /> )}\n                </TableBody>\n            </Table>\n        </div>\n    )\n}\n\nexport default function Token({ owner,\n    name,\n    address,\n    versionArray,\n    tokenDetails,\n    symbol,\n    granularity,\n    totalSupply,\n    transfersFrozen,\n    isIssuable,\n    controllerDisabled,\n    controller,\n    getInvestorCount,\n    currentCheckpointId,\n    decimals,\n    treasuryWallet,\n    dataStore,\n    documents,\n    modulesDetails,\n    etherscanUrl\n }) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Typography align=\"left\" variant=\"h5\" gutterBottom>{name}</Typography>\n            <Table className={classes.table} size=\"small\">\n                <TableBody>\n                    <Row label='Symbol' value={symbol}/>\n                    <Row label='owner' value={<EtherscanLink address={owner} prefix={etherscanUrl}/>}/>\n                    <Row label='address' value={<EtherscanLink address={address} prefix={etherscanUrl}/>}/>\n                    <Row label='Treasury Wallet' value={treasuryWallet ?\n                        <EtherscanLink address={treasuryWallet} prefix={etherscanUrl}/> : 'N/A'\n                    }/>\n                    <Row label='Data Store' value={dataStore ?\n                        <EtherscanLink address={dataStore} prefix={etherscanUrl}/> : 'N/A'\n                    }/>\n                    <Row label='Documents' value={documents ?\n                        documents.join(', ') : 'N/A'}/>\n                    <Row label='Version' value={versionArray.join('.')}/>\n                    <Row label='Token Details' value={tokenDetails}/>\n                    <Row label='divisible' value={_bool(granularity === '1')}/>\n                    <Row label='Total Supply' value={totalSupply}/>\n                    <Row label='Decimals' value={decimals}/>\n                    <Row label='Transfers Frozen?' value={_bool(transfersFrozen)}/>\n                    <Row label='Issuable?'value={_bool(isIssuable)}/>\n                    <Row label='Controller Disabled?' value={_bool(controllerDisabled)}/>\n                    <Row label='Controller' value={controller === zero_address ? '' : controller}/>\n                    <Row label='Investor Count' value={getInvestorCount}/>\n                    <Row label='Current Checkpoint Id' value={currentCheckpointId}/>\n                </TableBody>\n            </Table>\n            <Modules etherscanUrl={etherscanUrl} modulesDetails={modulesDetails} />\n        </div>\n    );        \n}","import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\n\nimport { fetchInfo } from './ti';\nimport Token from './Token';\nimport SecurityTokenRegistryABI from './abis/SecurityTokenRegistry.json'\nimport './App.css';\nimport { STR_MAINNET, STR_KOVAN } from './constants';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [web3, setWeb3] = useState();\n  const [str, setStr] = useState();\n  const [ticker, setTicker] = useState('');\n  const [error, setError] = useState('');\n  const [tokenInfo, setTokenInfo] = useState();\n  const [network, setNetwork] = useState('');\n  const [etherscanUrl, setEtherscanUrl] = useState('');\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    async function initWeb3() {\n      let web3\n      if (window.ethereum) {\n        web3 = new Web3(window.ethereum);\n        try { \n          await window.ethereum.enable()\n        } catch(e) {\n          console.error('User has denied account access to DApp...')\n        }\n      }\n      else if (window.web3) {\n        web3 = new Web3(web3.currentProvider);\n      }\n      else {\n        setError('You have to install MetaMask !');\n      }\n\n      /////\n      \n      let str;\n      if (web3) {\n        const chainId = await web3.eth.net.getId()\n        if (chainId === 1) {\n            str = new web3.eth.Contract(SecurityTokenRegistryABI, STR_MAINNET);\n            setStr(str);\n            setNetwork('mainnet');\n            setEtherscanUrl('https://etherscan.io/address');\n        } else if (chainId === 42) {\n            str = new web3.eth.Contract(SecurityTokenRegistryABI, STR_KOVAN);\n            setStr(str)\n            setNetwork('kovan');\n            setEtherscanUrl('https://kovan.etherscan.io/address')\n        } else {\n            setError(\"Network that you chose is not supported.\\n\" +\n            \"Open MetaMask and choose Mainnet or Kovan.\");\n            setStr();\n            setNetwork();\n            setEtherscanUrl();\n            return;\n        }\n\n        setWeb3(web3);\n        setStr(str);\n\n      }\n    }\n\n    initWeb3();\n  }, []);\n\n  const changeHandler = event => {\n\n    const pattern = RegExp('^[a-zA-Z0-9_]*$');\n    if (pattern.test(event.target.value)) {\n      setTicker(event.target.value.toUpperCase());\n    }\n  }\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError();\n    setTokenInfo();\n    try {\n      const tokenInfo = await fetchInfo(web3, str, ticker);\n      setTokenInfo(tokenInfo);\n      setError('');\n    } catch (error) {\n      setError(error.message);\n    }\n    setLoading(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"sm\" className=\"root\">\n        <form onSubmit={submitHandler}>\n          <TextField\n            value={ticker}\n            style={{ margin: 8 }}\n            placeholder=\"TICKER\"\n            variant='outlined'\n            margin=\"dense\"\n            inputProps={{\n              maxLength: 10\n            }}\n            disabled={!network}\n            onChange={changeHandler}\n          />\n\n          <div className={classes.wrapper}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading || !ticker || !network}\n              onClick={submitHandler}\n            >\n              submit\n            </Button>\n          </div>\n\n          { tokenInfo && \n            <Token {...tokenInfo} etherscanUrl={etherscanUrl} />\n          }\n          { loading &&  <CircularProgress className={classes.progress} /> }\n          { error && <div>{error}</div>}\n        </form>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}